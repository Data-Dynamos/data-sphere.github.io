"use strict";(self.webpackChunkdata_dynamos_github_io=self.webpackChunkdata_dynamos_github_io||[]).push([[6703],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),m=s(a),u=r,k=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(k,i(i({ref:e},c),{},{components:a})):n.createElement(k,i({ref:e},c))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[m]="string"==typeof t?t:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8517:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1,minutesToComplete:5,authors:["kmok"]},i="The Multi-Hop/Medallion Architecture, Applied",l={unversionedId:"batch-processing/multi-hop-medallion-domain-questions",id:"batch-processing/multi-hop-medallion-domain-questions",title:"The Multi-Hop/Medallion Architecture, Applied",description:"Recall that the Multi-Hop/Medallion Architecture comprises 3 stages: Bronze, Silver, and Gold.",source:"@site/docs/batch-processing/multi-hop-medallion-domain-questions.md",sourceDirName:"batch-processing",slug:"/batch-processing/multi-hop-medallion-domain-questions",permalink:"/docs/batch-processing/multi-hop-medallion-domain-questions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/batch-processing/multi-hop-medallion-domain-questions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,minutesToComplete:5,authors:["kmok"]},sidebar:"tutorialSidebar",previous:{title:"Batch vs. Streaming",permalink:"/docs/data-platforms/batch-vs-streaming"},next:{title:"Exercise: Bronze",permalink:"/docs/batch-processing/exercise-bronze"}},p={},s=[{value:"Applying the domain",id:"applying-the-domain",level:2}],c={toc:s},m="wrapper";function d(t){let{components:e,...o}=t;return(0,r.kt)(m,(0,n.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-multi-hopmedallion-architecture-applied"},"The Multi-Hop/Medallion Architecture, Applied"),(0,r.kt)("p",null,"Recall that the Multi-Hop/Medallion Architecture comprises 3 stages: Bronze, Silver, and Gold."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bronze-silver-gold.png",src:a(8484).Z,width:"1600",height:"464"})),(0,r.kt)("p",null,"In this section, we'll talk about how to take our domain questions and organise what the input and outputs are of each hop."),(0,r.kt)("h2",{id:"applying-the-domain"},"Applying the domain"),(0,r.kt)("p",null,"Let's bring back the domain questions from our earlier exercises and the steps taken to answer them:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"1. When was the last connection time of a Charge Point?")),(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"2. What is the final charge time and final charge dispense for every completed transaction?")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Read Data with a Schema"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Read OCPP Data (data.csv)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Time Conversion"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Return only StopTransaction Requests (filter)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Windows and Rows"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unpack JSON in StopTransaction Request (withColumn, from_json)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Cleanup"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unpack StartTransaction Response (withColumn, from_json)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unpack StartTransaction Request (withColumn, from_json)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Find the matching StartTransaction Requests (inner join)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Join Start and Stop data (left join)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Convert the start_timestamp and stop_timestamp fields to timestamp type (to_timestamp, withColumn)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate the Charge Transaction Duration (total_time) (withColumn, cast, maths)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate total_energy (withColumn, cast)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unpack JSON in MeterValues Request (withColumn, from_json)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate total_parking_time (explode, filter, window, groupBy)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Join with Target DataFrame (left join)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"All together now! (select)")))),(0,r.kt)("p",null,"Note: there are some ",(0,r.kt)("strong",{parentName:"p"},"non-business case transformations"),"  that could be relevant to both use cases (or new ones) or just good curation/cleanup activities in preparation for further transformation:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Read from a data source (in this case a csv)"),(0,r.kt)("li",{parentName:"ul"},"Unpack from string to JSON"),(0,r.kt)("li",{parentName:"ul"},"Flatten (unpack nested structures and bring to top level)"),(0,r.kt)("li",{parentName:"ul"},"Casting ambiguous columns to types")),(0,r.kt)("p",null,"Thinking back to the multi-hop (Bronze, Silver, Gold) architecture we can re-organise our transformation into the following stages:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Bronze"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Silver"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Read from data source (raw) and store"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unpack from string to JSON")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Flatten (unpack nested structures and bring to top level)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Casting ambiguous columns to types")))),(0,r.kt)("p",null,"And of course, the Gold transformation Step will feature various transformations required to answer one of our domain questions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"Gold (1) When was the last connection time of a Charge Point?")),(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"Gold (2) What is the final charge time and final charge dispense for every completed transaction?")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Windows and Rows"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Find all StopTransaction (filter)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"Cleanup"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Join with StartTransaction Responses, matching on transaction_id (left join)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Find the matching StartTransaction Requests (inner join)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate the total_time (withColumn, cast, maths)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate total_energy (withColumn, cast)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Calculate total_parking_time (explode, filter, window, groupBy)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"Join and Shape (left join, select)")))))}d.isMDXComponent=!0},8484:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/bronze-silver-gold-28d92a8c937fb0bd4e9edede805665a4.png"}}]);